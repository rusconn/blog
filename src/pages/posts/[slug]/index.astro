---
import type { ComponentProps } from "react";

import { Article } from "@/components/posts";
import { TAGS } from "@/constants";
import Layout from "@/layout/Layout.astro";
import type { PostFrontmatter } from "@/types";

type ParamsProps = {
  params: { slug: string };
  props: Props;
}[];

type Props = ComponentProps<typeof Article>;

export async function getStaticPaths(): Promise<ParamsProps> {
  const allPosts = await Astro.glob<PostFrontmatter>("/posts/*.md");

  return allPosts.map(post => ({
    params: { slug: post.frontmatter.slug },
    props: {
      title: post.frontmatter.title,
      date: post.frontmatter.date,
      tags: post.frontmatter.tags.map(slug => ({
        slug,
        name: TAGS.find(tag => tag.slug === slug)!.name,
      })),
      markdown: post.rawContent(),
    },
  }));
}

const { title, date, tags, markdown } = Astro.props;

const description = markdown.split("\n").at(1)?.slice(0, 100);
---

<Layout {...{ title, description }}>
  <Article {...{ title, date, tags, markdown }} />
</Layout>
